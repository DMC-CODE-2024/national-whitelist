name: Build and Upload JAR to Google Drive

on:
  workflow_dispatch:
    inputs:
      recipient_email:
        description: 'Email address to share the JAR file with'
        required: true

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set Up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn clean package

    - name: Write GDrive Credentials JSON
      run: |
        echo "${{ secrets.GDRIVE_CREDENTIALS_JSON }}" > /tmp/gdrive_key.json
        cat /tmp/gdrive_key.json  # Optional: Verify the JSON content

    - name: Find the JAR File
      id: find_jar
      run: |
        JAR_FILE=$(find target -name "*.jar" | head -n 1)
        echo "Found JAR file: $JAR_FILE"
        echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

    - name: Upload and Share JAR on Google Drive
      id: upload_and_share
      run: |
        pip install --upgrade google-api-python-client google-auth google-auth-httplib2 google-auth-oauthlib
        python - <<EOF
        import os
        from google.oauth2 import service_account
        from googleapiclient.discovery import build
        from googleapiclient.http import MediaFileUpload
        import json

        # Load the credentials from the environment variable
        credentials_info = ${{ secrets.GDRIVE_CREDENTIALS_JSON }}
        credentials = service_account.Credentials.from_service_account_info(credentials_info, scopes=['https://www.googleapis.com/auth/drive.file'])

        # Initialize the Google Drive service
        drive_service = build('drive', 'v3', credentials=credentials)

        # Dynamically determine the JAR file name
        jar_file_path = os.getenv('JAR_FILE')
        file_name = os.path.basename(jar_file_path)

        # Upload the JAR file to Google Drive
        file_metadata = {'name': file_name, 'parents': ['${{ secrets.GDRIVE_FOLDER_ID }}']}
        media = MediaFileUpload(jar_file_path, mimetype='application/java-archive')
        file = drive_service.files().create(body=file_metadata, media_body=media, fields='id').execute()
        file_id = file.get('id')
        print(f"Uploaded file with ID: {file_id}")

        # Share the file with the specified recipient
        recipient_email = '${{ github.event.inputs.recipient_email }}'
        permission = {
            'type': 'user',
            'role': 'reader',
            'emailAddress': recipient_email
        }
        drive_service.permissions().create(fileId=file_id, body=permission, fields='id').execute()

        # Output the file link to GITHUB_OUTPUT
        file_link = f'https://drive.google.com/file/d/{file_id}/view?usp=sharing'
        with open(os.environ['GITHUB_OUTPUT'], 'a') as fh:
            print(f"file_link={file_link}", file=fh)
        EOF

    - name: Send Email with Google Drive Link
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: 'smtp.gmail.com'
        server_port: 465  # SSL Port for Gmail
        secure: true  # SSL requires secure to be true
        username: ${{ secrets.SMTP_USERNAME }}  # Your Gmail address
        password: ${{ secrets.SMTP_PASSWORD }}  # Your App Password
        subject: 'Download Your JAR File'
        body: |
          Your Spring Boot JAR file has been uploaded to Google Drive. 
          You can download it from the following link:
          ${{ steps.share_file.outputs.file_link }}
        to: ${{ github.event.inputs.recipient_email }}
        from: ${{ secrets.SENDER_EMAIL }}  # Typically your Gmail address
